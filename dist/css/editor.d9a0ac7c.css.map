{"version":3,"sources":["webpack:///src/components/ui/oNavbar/components/src/components/ui/oNavbar/components/oNavbarButton.vue","webpack:///src/components/ui/oNavbar/components/src/components/ui/oNavbar/components/oNavbarPanel.vue","webpack:///src/components/ui/oNavbar/components/src/components/ui/oNavbar/components/oNavbarTitle.vue","webpack:///src/components/ui/oNavbar/src/components/ui/oNavbar/oNavbar.vue","webpack:///src/components/canvas/elements/PencilKit/sections/src/components/canvas/elements/PencilKit/sections/MainBar.vue","webpack:///src/components/canvas/elements/PencilKit/src/components/canvas/elements/PencilKit/PencilKit.vue","webpack:///src/views/src/views/Edit.vue"],"names":[],"mappings":"AA6EA,wBACA,WAAA,CACA,yBAAA,CAAA,sBAAA,CAAA,iBAAA,CACA,YAAA,CACA,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,cAAA,CACA,kBAAA,CACA,WAAA,CACA,iBAAA,CACA,YAAA,CACA,uBACA,CACA,qCACA,oDAAA,CACA,wDACA,CACA,+BACA,WAAA,CACA,UAAA,CACA,WAAA,CACA,sDAAA,CACA,KAAA,CACA,MAAA,CACA,iBAAA,CACA,UAAA,CACA,mBAAA,CACA,SAAA,CACA,uBACA,CACA,kFAEA,mBAAA,CACA,SAAA,CACA,wBACA,CACA,6CACA,8DACA,CAEA,8FAEA,kBAAA,CACA,SAAA,CACA,8DAAA,CACA,wBACA,CACA,iIAEA,8DACA,CACA,iOAGA,SAAA,CACA,OAAA,CACA,SACA,CCjHA,sBACA,cAAA,CACA,QAAA,CACA,MAAA,CACA,WAAA,CACA,YAAA,CACA,qBAAA,CACA,qCAAA,CACA,SAAA,CACA,2BAAA,CACA,sBAAA,CACA,mBACA,CACA,uCACA,uBAAA,CACA,SAAA,CACA,sCAAA,CACA,mBACA,CCAA,wBACA,WAAA,CACA,yBAAA,CAAA,sBAAA,CAAA,iBAAA,CACA,YAAA,CACA,kBAAA,CACA,uBAAA,CACA,iBAAA,CACA,mCAAA,CACA,0BAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,oBAAA,CAAA,gBACA,CACA,yCACA,2CACA,YACA,CACA,CC2DA,qBACA,cAAA,CACA,KAAA,CACA,WAAA,CACA,WAAA,CACA,4CAAA,CACA,kCAAA,CAAA,0BAAA,CACA,qCAAA,CACA,SAAA,CACA,YAAA,CACA,yBACA,CAEA,yBACA,yBAAA,CAAA,sBAAA,CAAA,iBAAA,CACA,YAAA,CACA,WACA,CACA,8BACA,aAAA,CACA,iBACA,CACA,+BACA,gBAAA,CACA,cACA,CACA,6DACA,YACA,CACA,+CAEA,gBACA,CCzGA,sBACA,YAAA,CACA,WACA,CACA,oBACA,YAAA,CACA,iBAAA,CACA,4BACA,CACA,2BACA,UAAA,CACA,WACA,CACA,yCACA,gBACA,CACA,+BACA,iBAAA,CACA,YAAA,CACA,4CAAA,CACA,UACA,CAKA,oGACA,YACA,CACA,8CACA,2BACA,CACA,8CACA,YAAA,CACA,wBAAA,CACA,WAAA,CAEA,sBAAA,CACA,kBACA,CACA,kDACA,UAAA,CACA,WAAA,CACA,2DAAA,CACA,iBACA,CACA,iHAEA,uBAAA,CACA,2CACA,CCrEA,iCACA,YAAA,CACA,eAAA,CACA,4CAAA,CACA,kBAAA,CACA,4CAAA,CACA,kCAAA,CAAA,0BAAA,CACA,eAAA,CACA,yBACA,CAEA,yCACA,iCACA,UAAA,CACA,kIAEA,CACA,2CAAA,CACA,cACA,CACA,uCACA,4CAAA,CACA,SAAA,CACA,uBAAA,CACA,4CAAA,CACA,kCAAA,CAAA,0BACA,CACA,CAEA,yCACA,iCACA,WAAA,CACA,2BACA,CACA,CAEA,uCACA,eACA,CCSA,sEAEA,cAAA,CACA,UAAA,CACA,WACA,CAEA,0CACA,cAAA,CACA,WAAA,CACA,QAAA,CACA,0BAAA,CACA,aACA,CAEA,yCACA,0CACA,QAAA,CACA,aACA,CACA,CACA,gDACA,UACA","file":"editor.d9a0ac7c.css","sourcesContent":["<template>\r\n  <button\r\n    v-bind:aria-label=\"label\"\r\n    v-bind:class=\"classObject\"\r\n    v-bind:label=\"label\"\r\n    v-on:click=\"clickHandler\"\r\n  >\r\n    <slot />\r\n  </button>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"oNavbarButton\",\r\n  props: {\r\n    badge: {\r\n      validator: function(value) {\r\n        return [\"primary\", \"secondary\", \"danger\"].indexOf(value) !== -1;\r\n      }\r\n    },\r\n    isA11yButton: {\r\n      type: Boolean,\r\n      required: false\r\n    },\r\n    label: {\r\n      required: true,\r\n      type: String\r\n    },\r\n    active: {\r\n      required: false,\r\n      type: Boolean\r\n    },\r\n    launchType: {\r\n      required: false,\r\n      validator: function(value) {\r\n        return [\"panel\", \"emit\"].indexOf(value) !== -1;\r\n      }\r\n    },\r\n    launchAction: {\r\n      required: false,\r\n      type: String\r\n    }\r\n  },\r\n  computed: {\r\n    classObject: function() {\r\n      return {\r\n        \"octaveNav-button--a11yButton\": this.isA11yButton,\r\n        \"octaveNav-button--active\":\r\n          (this.launchType == \"panel\" &&\r\n            this.$parent.panelActive == this.launchAction) ||\r\n          this.active == true\r\n      };\r\n    }\r\n  },\r\n  methods: {\r\n    clickHandler: function() {\r\n      switch (this.launchType) {\r\n        case \"panel\":\r\n          this.$parent.$emit(\"changePanel\", this.launchAction);\r\n          break;\r\n        case \"emit\":\r\n          this.$socket.client.emit(\r\n            \"update_canvas\",\r\n            JSON.stringify({ version: \"4.0.0-rc.1\", objects: [] })\r\n          );\r\n          this.$socket.client.emit(\r\n            \"clear_canvas\",\r\n            JSON.stringify({ version: \"4.0.0-rc.1\", objects: [] })\r\n          );\r\n          break;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nbutton {\r\n  height: 100%;\r\n  width: max-content;\r\n  padding: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  background: inherit;\r\n  border: none;\r\n  position: relative;\r\n  outline: none;\r\n  color: var(--text-color);\r\n}\r\n.dark button:before {\r\n  --buttonbackground-color: rgb(var(--panel-color), 0.3);\r\n  --buttonbackground-color-pressed: rgb(var(--panel-color));\r\n}\r\nbutton:before {\r\n  content: \" \";\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: var(--buttonbackground-color, #f6f6f6);\r\n  top: 0px;\r\n  left: 0px;\r\n  position: absolute;\r\n  z-index: -1;\r\n  transform: scale(0.7);\r\n  opacity: 0;\r\n  transition: 0.2s ease-out;\r\n}\r\nbutton:hover:before,\r\nbutton:focus-visible:before {\r\n  transform: scale(0.9);\r\n  opacity: 1;\r\n  transition: 0.07s ease-out;\r\n}\r\nbutton:focus-visible:before {\r\n  background-color: var(--buttonbackground-color-pressed, #e5e5e5);\r\n}\r\n\r\nbutton:active:before,\r\nbutton.octaveNav-button--active:before {\r\n  transform: scale(1);\r\n  opacity: 1;\r\n  background-color: var(--buttonbackground-color-pressed, #e5e5e5);\r\n  transition: 0.03s ease-out;\r\n}\r\nbutton:active:focus-visible:before,\r\nbutton.octaveNav-button--active:active:focus-visible:before {\r\n  background-color: var(--buttonbackground-color-pressed, #d5d5d5);\r\n}\r\nbutton.octaveNav-button--a11yButton:not(:focus),\r\nbutton.octaveNav-button--a11yButton:not(:focus-visible),\r\nhtml:not([data-js-focus-visible]) button.octaveNav-button--a11yButton {\r\n  opacity: 0;\r\n  width: 0px;\r\n  padding: 0px;\r\n}\r\n</style>\r\n","<template>\r\n  <main v-bind:class=\"classObject\"></main>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"oNavbarpanel\",\r\n  props: {\r\n    panelActive: Boolean,\r\n    panelName: String\r\n  },\r\n  computed: {\r\n    classObject: function() {\r\n      return {\r\n        \"octaveNav-isOpen\": this.panelActive\r\n      };\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nmain {\r\n  position: fixed;\r\n  top: 4rem;\r\n  left: 0px;\r\n  width: 100vw;\r\n  height: 25rem;\r\n  background-color: #fff;\r\n  box-shadow: 0 15px 15px rgba(0, 0, 0, 0.1);\r\n  opacity: 0;\r\n  transform: translateY(-1rem);\r\n  transition: 0.2s ease-in;\r\n  pointer-events: none;\r\n}\r\nmain.octaveNav-isOpen {\r\n  transform: translateX(0px);\r\n  opacity: 1;\r\n  transition: 0.2s cubic-bezier(0, 0.75, 0, 1);\r\n  pointer-events: none;\r\n}\r\n</style>\r\n","<template>\r\n  <header :hideOnMobile=\"hideOnMobile\">\r\n    <h1>\r\n      <span class=\"productSection\">{{ productSection }}</span>\r\n      &nbsp;\r\n      <span v-bind:class=\"productNameStyle\">{{ productName }}</span>\r\n    </h1>\r\n  </header>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"oNavbarTitle\",\r\n  props: {\r\n    productSection: {\r\n      required: false,\r\n      type: String\r\n    },\r\n    productName: {\r\n      required: true,\r\n      type: String\r\n    },\r\n    hideOnMobile: {\r\n      required: false,\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  computed: {\r\n    productNameStyle: function() {\r\n      return {\r\n        pnAltStyle: !this.productSection,\r\n        productName: true\r\n      };\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nheader {\r\n  height: 100%;\r\n  width: max-content;\r\n  display: flex;\r\n  align-items: center;\r\n  color: var(--text-color);\r\n  padding-left: 20px;\r\n  font-family: var(--body-font-family);\r\n  -webkit-touch-callout: none;\r\n  user-select: none;\r\n}\r\n@media only screen and (max-width: 600px) {\r\n  header[hideOnMobile=\"true\"] {\r\n    display: none;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <nav>\r\n    <section class=\"left\" :touchscreen=\"isTouchScreen\">\r\n      <section class=\"a11yButtons\">\r\n        <oNavbarButton label=\"Skip to main content\" isA11yButton>\r\n          Skip to main content\r\n        </oNavbarButton>\r\n        <oNavbarButton label=\"Accessibility Help\" isA11yButton>\r\n          Accessibility Help\r\n        </oNavbarButton>\r\n      </section>\r\n      <slot name=\"left\" />\r\n    </section>\r\n    <section class=\"right\">\r\n      <slot name=\"right\" />\r\n    </section>\r\n    <oNavbarPanel\r\n      v-bind:panelActive=\"panelActive\"\r\n      v-bind:panelName=\"panelName\"\r\n    />\r\n  </nav>\r\n</template>\r\n\r\n<script>\r\nimport oNavbarButton from \"./components/oNavbarButton.vue\";\r\nimport oNavbarPanel from \"./components/oNavbarPanel.vue\";\r\nexport const oNavbar = {\r\n  name: \"oNavbar\",\r\n  components: {\r\n    oNavbarButton,\r\n    oNavbarPanel\r\n  },\r\n  props: {\r\n    modifiers: {\r\n      type: String,\r\n      required: false,\r\n      validator: function(value) {\r\n        return [\"disabled\", \"loading\"].indexOf(value) !== -1;\r\n      }\r\n    },\r\n    theme: {\r\n      type: String,\r\n      required: false,\r\n      validator: function(value) {\r\n        return [\"white\", \"light\", \"dark\", \"black\"].indexOf(value) !== -1;\r\n      }\r\n    },\r\n    position: {\r\n      type: String,\r\n      required: false,\r\n      validator: function(value) {\r\n        return [\"fixed\", \"sticky\", \"absolute\"].indexOf(value) !== -1;\r\n      }\r\n    },\r\n    type: {\r\n      type: String,\r\n      required: false,\r\n      validator: function(value) {\r\n        return [\"raised\", \"lowered\", \"small\"].indexOf(value) !== -1;\r\n      }\r\n    }\r\n  },\r\n  data: function() {\r\n    return {\r\n      panelActive: false,\r\n      panelName: null,\r\n      isTouchScreen: false\r\n    };\r\n  },\r\n  mounted: function() {\r\n    this.$on(\"changePanel\", function(panelName) {\r\n      if (this.panelActive == true && panelName == this.panelName) {\r\n        this.panelActive = false;\r\n        this.panelName = null;\r\n      } else if (this.panelActive == true && panelName != this.panelName) {\r\n        this.panelActive = true;\r\n        this.panelName = panelName;\r\n      } else if (this.panelActive == false && panelName != this.panelName) {\r\n        this.panelActive = true;\r\n        this.panelName = panelName;\r\n      }\r\n    });\r\n    //touchscreen detection thanks to https://developer.mozilla.org/en-US/docs/Web/HTTP/Browser_detection_using_the_user_agent\r\n    let hasTouchScreen = false;\r\n    if (\"maxTouchPoints\" in navigator) {\r\n      hasTouchScreen = navigator.maxTouchPoints > 0;\r\n    } else if (\"msMaxTouchPoints\" in navigator) {\r\n      hasTouchScreen = navigator.msMaxTouchPoints > 0;\r\n    } else {\r\n      const mQ = window.matchMedia && matchMedia(\"(pointer:coarse)\");\r\n      if (mQ && mQ.media === \"(pointer:coarse)\") {\r\n        hasTouchScreen = !!mQ.matches;\r\n      } else if (\"orientation\" in window) {\r\n        hasTouchScreen = true;\r\n      } else {\r\n        const UA = navigator.userAgent;\r\n        hasTouchScreen =\r\n          /\\b(BlackBerry|webOS|iPhone|IEMobile)\\b/i.test(UA) ||\r\n          /\\b(Android|Windows Phone|iPad|iPod)\\b/i.test(UA);\r\n      }\r\n    }\r\n    if (hasTouchScreen) {\r\n      this.isTouchScreen = true;\r\n    }\r\n  }\r\n};\r\n\r\n// Proxy export all related components.\r\nexport { default as oNavbarTitle } from \"./components/oNavbarTitle.vue\";\r\nexport { default as oNavbarButton } from \"./components/oNavbarButton.vue\";\r\nexport default oNavbar;\r\n</script>\r\n\r\n<style scoped>\r\nnav {\r\n  position: fixed;\r\n  top: 0px;\r\n  height: 4rem;\r\n  width: 100vw;\r\n  background-color: rgba(var(--panel-color), 0.6);\r\n  backdrop-filter: blur(20px);\r\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);\r\n  z-index: 1;\r\n  display: flex;\r\n  touch-action: manipulation;\r\n}\r\n\r\nsection {\r\n  width: max-content;\r\n  display: flex;\r\n  height: 100%;\r\n}\r\nsection.left {\r\n  margin-left: 0px;\r\n  margin-right: auto;\r\n}\r\nsection.right {\r\n  margin-left: auto;\r\n  margin-right: 0px;\r\n}\r\n.left[touchscreen=\"true\"] section.a11yButtons {\r\n  display: none;\r\n}\r\n.left,\r\n.right {\r\n  z-index: 19999999;\r\n}\r\n</style>\r\n","<template>\r\n  <section class=\"pk pk-section\">\r\n    <section class=\"pk pk-tools\">\r\n      <figure\r\n        v-for=\"tool in currentTools\"\r\n        v-bind:key=\"tool.uuid\"\r\n        v-on:click=\"changeActiveTool(tool.uuid)\"\r\n        v-bind:isActive=\"tool.active\"\r\n        v-bind:itemType=\"tool.toolType\"\r\n      >\r\n        <img v-bind:src=\"tool.toolGraphic.light\" />\r\n        <img v-bind:src=\"tool.toolGraphic.dark\" />\r\n      </figure>\r\n    </section>\r\n    <section class=\"pk pk-pickers\">\r\n      <figure class=\"pk pk-colorWheel\">\r\n        <div></div>\r\n      </figure>\r\n    </section>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"PencilKitMainBar\",\r\n  computed: {\r\n    currentTools() {\r\n      return this.$store.state.CanvasStateCanvasToolPickerState.currentTools;\r\n    }\r\n  },\r\n  methods: {\r\n    changeActiveTool(uuid) {\r\n      this.$store.direct.commit.CanvasStateCanvasToolPickerState.ChangeCurrentActiveTool(\r\n        uuid\r\n      );\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\nsection.pk.pk-section {\r\n  display: flex;\r\n  height: 100%;\r\n}\r\nsection.pk.pk-tools {\r\n  display: flex;\r\n  overflow-x: scroll;\r\n  max-width: calc(100vw - 25px);\r\n}\r\nsection.pk.pk-tools figure {\r\n  width: 35px;\r\n  margin: 25px;\r\n}\r\nsection.pk.pk-tools figure[itemType=\"pen\"] {\r\n  margin-right: 5px;\r\n}\r\nsection.pk.pk-tools figure img {\r\n  position: absolute;\r\n  bottom: -26px;\r\n  transition: 0.25s cubic-bezier(0.2, -0.15, 0, 1.53);\r\n  width: 35px;\r\n}\r\n\r\n.light section.pk.pk-tools figure img:nth-child(2) {\r\n  display: none;\r\n}\r\n.dark section.pk.pk-tools figure img:nth-child(1) {\r\n  display: none;\r\n}\r\nsection.pk.pk-tools figure[isActive=\"true\"] img {\r\n  transform: translateY(-25px);\r\n}\r\nsection.pk.pk-pickers figure.pk.pk-colorWheel {\r\n  display: none;\r\n  height: calc(100% - 50px);\r\n  margin: 25px;\r\n  /*display: flex;*/\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\nsection.pk.pk-pickers figure.pk.pk-colorWheel div {\r\n  width: 30px;\r\n  height: 30px;\r\n  background: conic-gradient(red, yellow, lime, aqua, blue, magenta, red);\r\n  border-radius: 50%;\r\n}\r\nsection.pk.pk-pickers figure.pk.pk-colorWheel div:active,\r\nsection.pk.pk-pickers figure.pk.pk-colorWheel div:hover {\r\n  transform: rotate(360deg);\r\n  transition: 1s cubic-bezier(0.64, 0.17, 0.1, 1.58);\r\n}\r\n</style>\r\n","<template>\r\n  <main class=\"pk pk-cont\" v-on:click.prevent>\r\n    <component v-bind:is=\"currentToolbarSection\"></component>\r\n  </main>\r\n</template>\r\n\r\n<script>\r\nimport PencilKitMainBar from \"./sections/MainBar\";\r\nexport default {\r\n  name: \"PencilKit\",\r\n  components: {\r\n    PencilKitMainBar\r\n  },\r\n  data: function() {\r\n    return {\r\n      currentToolbarSection: PencilKitMainBar\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nmain.pk.pk-cont {\r\n  height: 100px;\r\n  min-width: 230px;\r\n  box-shadow: 0px 2px 20px 0px rgb(214 214 214 / 53%);\r\n  border-radius: 50px;\r\n  background-color: rgba(var(--panel-color), 0.6);\r\n  backdrop-filter: blur(20px);\r\n  overflow: hidden;\r\n  touch-action: manipulation;\r\n}\r\n\r\n@media only screen and (min-width: 600px) {\r\n  main.pk.pk-cont {\r\n    opacity: 0.5;\r\n    transition: opacity 2.5s cubic-bezier(0.4, 0, 1, 1),\r\n      box-shadow 2.5s cubic-bezier(0.4, 0, 1, 1),\r\n      background-color 2.5s cubic-bezier(0.4, 0, 1, 1);\r\n    background-color: rgba(var(--panel-color), 0);\r\n    padding: 0px 25px;\r\n  }\r\n  main.pk.pk-cont:hover {\r\n    box-shadow: 0px 2px 20px 0px rgb(167 167 167 / 53%);\r\n    opacity: 1;\r\n    transition: 0.2s ease-out;\r\n    background-color: rgba(var(--panel-color), 0.6);\r\n    backdrop-filter: blur(20px);\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 600px) {\r\n  main.pk.pk-cont {\r\n    width: 100vw;\r\n    border-radius: 10px 10px 0px 0px;\r\n  }\r\n}\r\n\r\n.dark main.pk.pk-cont {\r\n  box-shadow: none;\r\n}\r\n</style>\r\n","<template>\r\n  <main class=\"cvs cvs-editor\">\r\n    <oNavbar>\r\n      <template v-slot:left>\r\n        <oNavbarButton label=\"Menu\">\r\n          <picture class=\"cvs cvs-titlebar--logo\">\r\n            <source\r\n              :srcset=\"\r\n                require('@/assets/Resources/Branding/Export/SVG/BluebirdCloud Canvas Icon - Dark.svg')\r\n              \"\r\n              media=\"(prefers-color-scheme: dark)\"\r\n            />\r\n            <img\r\n              :src=\"\r\n                require('@/assets/Resources/Branding/Export/SVG/BluebirdCloud Canvas Icon - Light.svg')\r\n              \"\r\n            />\r\n          </picture>\r\n        </oNavbarButton>\r\n        <oNavbarTitle productName=\"Canvas\" productSection=\"BluebirdCloud\" />\r\n      </template>\r\n      <template v-slot:right>\r\n        <oNavbarButton label=\"Clear Canvas\" launchType=\"emit\">\r\n          Clear\r\n        </oNavbarButton>\r\n        <oNavbarButton label=\"Users Connected\">\r\n          {{ currentUsers }} users connected\r\n        </oNavbarButton>\r\n      </template>\r\n    </oNavbar>\r\n    <section class=\"cvs cvs-canvas\">\r\n      <canvas ref=\"canvasElOrigin\"></canvas>\r\n    </section>\r\n    <section class=\"cvs cvs-controls\">\r\n      <PencilKit />\r\n    </section>\r\n  </main>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  oNavbar,\r\n  oNavbarTitle,\r\n  oNavbarButton\r\n} from \"@/components/ui/oNavbar/oNavbar.vue\";\r\n\r\nimport PencilKit from \"@/components/canvas/elements/PencilKit/PencilKit.vue\";\r\n\r\nimport Canvas from \"@/helpers/Canvas/Canvas.ts\";\r\nexport default {\r\n  name: \"CVSPEdit\",\r\n  components: {\r\n    PencilKit,\r\n    oNavbar,\r\n    oNavbarTitle,\r\n    oNavbarButton\r\n  },\r\n  mounted() {\r\n    new Canvas(this.$refs.canvasElOrigin);\r\n  },\r\n  computed: {\r\n    currentUsers() {\r\n      return this.$root.currentUsers;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nmain.cvs.cvs-editor,\r\n.cvs.cvs-canvas {\r\n  position: fixed;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\nsection.cvs.cvs-controls {\r\n  position: fixed;\r\n  bottom: 25px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  z-index: 10000;\r\n}\r\n\r\n@media only screen and (max-width: 600px) {\r\n  section.cvs.cvs-controls {\r\n    bottom: 0;\r\n    z-index: 10000;\r\n  }\r\n}\r\npicture.cvs.cvs-titlebar--logo {\r\n  width: 2rem;\r\n}\r\n</style>\r\n"]}